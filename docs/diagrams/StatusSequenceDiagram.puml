@startuml
!include style.puml

box Logic LOGIC_COLOR_T1
participant ":LogicManager" as LogicManager LOGIC_COLOR
participant ":ResidenceTrackerParser" as ResidenceTrackerParser LOGIC_COLOR
participant "s:StatusCommand" as StatusCommand LOGIC_COLOR
participant ":CommandResult" as CommandResult LOGIC_COLOR
end box

box Model MODEL_COLOR_T1
participant ":Model" as Model MODEL_COLOR
end box

[-> LogicManager : execute("status clean 1 3 4")
activate LogicManager

LogicManager -> ResidenceTrackerParser : parseCommand("status clean 1 3 4")
activate ResidenceTrackerParser

create StatusCommand
ResidenceTrackerParser -> StatusCommand
activate StatusCommand

StatusCommand --> ResidenceTrackerParser : s
deactivate StatusCommand

ResidenceTrackerParser --> LogicManager : s
deactivate ResidenceTrackerParser

LogicManager -> StatusCommand : execute()
activate StatusCommand

group loop [index in indexArray]
    StatusCommand ->StatusCommand:createUpdatedResidence(index)
    activate StatusCommand

    StatusCommand-->StatusCommand:updatedResidence
    deactivate StatusCommand

    StatusCommand -> Model : setResidence(updatedResidence)
    activate Model

    Model --> StatusCommand
    deactivate Model
end

StatusCommand -> Model : updateFilteredResidenceList(predicate)
activate Model

ref over Model
    automatic sorting
    of residence by
    clean status
end ref

Model --> StatusCommand
deactivate Model

create CommandResult
StatusCommand -> CommandResult
activate CommandResult

CommandResult --> StatusCommand
deactivate CommandResult

StatusCommand --> LogicManager : result
deactivate StatusCommand


[<--LogicManager
deactivate LogicManager
@enduml
